operator match the snapshot:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: RELEASE-NAME-account-operator
    rules:
      - apiGroups:
          - core.openmfp.io
        resources:
          - accounts
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - core.openmfp.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
          - events
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: RELEASE-NAME-account-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-account-operator
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-account-operator
        namespace: NAMESPACE
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: RELEASE-NAME-account-operator
      namespace: NAMESPACE
    spec:
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          service: RELEASE-NAME-account-operator
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            control-plane: controller-manager
            service: RELEASE-NAME-account-operator
        spec:
          containers:
            - args:
                - operator
                - --leader-elect
                - --log-level=
                - --health-probe-bind-address=:8081
              env:
                - name: SUBROUTINES_NAMESPACE_ENABLED
                  value: "true"
                - name: SUBROUTINES_CREATOR_ENABLED
                  value: "true"
                - name: SUBROUTINES_EXTENSION_ENABLED
                  value: "true"
                - name: SUBROUTINES_EXTENSION_READY_ENABLED
                  value: "true"
                - name: KCP_ENABLED
                  value: "false"
                - name: KCP_VIRTUAL_WORKSPACE_URL
                  value: ""
              image: ghcr.io/openmfp/account-operator:0.0.0
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
                initialDelaySeconds: 15
                periodSeconds: 20
              name: manager
              ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                - containerPort: 8081
                  name: health-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 260m
                  memory: 512Mi
                requests:
                  cpu: 150m
                  memory: 128Mi
              securityContext:
                runAsNonRoot: true
          serviceAccountName: RELEASE-NAME-account-operator
          terminationGracePeriodSeconds: 10
          volumes: null
  4: |
    apiVersion: v1
    imagePullSecrets:
      - name: github
    kind: ServiceAccount
    metadata:
      name: RELEASE-NAME-account-operator
      namespace: NAMESPACE
operator match the snapshot (with kubeconfigSecret):
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: RELEASE-NAME-account-operator
    rules:
      - apiGroups:
          - core.openmfp.io
        resources:
          - accounts
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - core.openmfp.io
        resources:
          - accounts
          - accounts/status
        verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
      - apiGroups:
          - ""
        resources:
          - namespaces
          - events
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: RELEASE-NAME-account-operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-account-operator
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-account-operator
        namespace: NAMESPACE
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: RELEASE-NAME-account-operator
      namespace: NAMESPACE
    spec:
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          service: RELEASE-NAME-account-operator
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
          labels:
            control-plane: controller-manager
            service: RELEASE-NAME-account-operator
        spec:
          containers:
            - args:
                - operator
                - --leader-elect
                - --log-level=
                - --health-probe-bind-address=:8081
              env:
                - name: SUBROUTINES_NAMESPACE_ENABLED
                  value: "true"
                - name: SUBROUTINES_CREATOR_ENABLED
                  value: "true"
                - name: SUBROUTINES_EXTENSION_ENABLED
                  value: "true"
                - name: SUBROUTINES_EXTENSION_READY_ENABLED
                  value: "true"
                - name: KCP_ENABLED
                  value: "false"
                - name: KCP_VIRTUAL_WORKSPACE_URL
                  value: ""
                - name: KUBECONFIG
                  value: /api-kubeconfig/kubeconfig
              image: ghcr.io/openmfp/account-operator:0.0.0
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8081
                initialDelaySeconds: 15
                periodSeconds: 20
              name: manager
              ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                - containerPort: 8081
                  name: health-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8081
                initialDelaySeconds: 5
                periodSeconds: 10
              resources:
                limits:
                  cpu: 260m
                  memory: 512Mi
                requests:
                  cpu: 150m
                  memory: 128Mi
              securityContext:
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /api-kubeconfig
                  name: external-api-server
          serviceAccountName: RELEASE-NAME-account-operator
          terminationGracePeriodSeconds: 10
          volumes:
            - name: external-api-server
              secret:
                secretName: kubeconfig
  4: |
    apiVersion: v1
    imagePullSecrets:
      - name: github
    kind: ServiceAccount
    metadata:
      name: RELEASE-NAME-account-operator
      namespace: NAMESPACE
