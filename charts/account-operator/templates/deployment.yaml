apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "entity.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  selector:
    matchLabels:
      service: {{ include "entity.name" . }}
  template:
    metadata:
      labels:
        service: {{ include "entity.name" . }}
        control-plane: controller-manager
        {{- with .Values.deployment.specTemplate.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{ if .Values.deployment.specTemplate.annotations }}
      annotations:
        {{- with .Values.deployment.specTemplate.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "entity.name" . }}
      containers:
        - args:
          - operator
          - --leader-elect
          - --log-level={{ .Values.logLevel }}
          - "--health-probe-bind-address=:{{ .Values.health.port }}"
          image: {{ .Values.image.name }}:{{ .Chart.AppVersion }}
          name: manager
          securityContext:
            runAsNonRoot: true
          ports:
          - containerPort: {{ .Values.metrics.port }}
            name: metrics
            protocol: TCP
          - name: health-port
            containerPort: {{ .Values.health.port }}
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.health.port}}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.health.port}}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu }}
              memory: {{ .Values.deployment.resources.limits.memory }}
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
          env:
          - name: SUBROUTINES_NAMESPACE_ENABLED
            value: "{{ .Values.subroutines.namespace.enabled }}"
          - name: SUBROUTINES_FGA_ENABLED
            value: "{{ .Values.subroutines.fga.enabled }}"
          - name: SUBROUTINES_FGA_GRPC_ADDR
            value: "{{ .Values.subroutines.fga.grpcAddr }}"
          - name: SUBROUTINES_FGA_ROOT_NAMESPACE
            value: "{{ .Values.subroutines.fga.rootNamespace }}"
          - name: SUBROUTINES_FGA_OBJECT_TYPE
            value: "{{ .Values.subroutines.fga.objectType }}"
          - name: SUBROUTINES_FGA_PARENT_RELATION
            value: "{{ .Values.subroutines.fga.parentRelation }}"
          - name: SUBROUTINES_FGA_CREATOR_RELATION
            value: "{{ .Values.subroutines.fga.creatorRelation }}"
          - name: SUBROUTINES_EXTENSION_ENABLED
            value: "{{ .Values.subroutines.extension.enabled }}"
          - name: SUBROUTINES_EXTENSION_READY_ENABLED
            value: "{{ .Values.subroutines.extensionReady.enabled }}"
          - name: KCP_ENABLED
            value: "{{ .Values.kcp.enabled }}"
          - name: KCP_VIRTUAL_WORKSPACE_URL
            value: "{{ .Values.kcp.virtualWorkspaceUrl }}"
          {{- if .Values.kubeconfigSecret }}
          - name: KUBECONFIG
            value: /api-kubeconfig/kubeconfig
          {{- end }}
          {{- if .Values.kubeconfigSecret }}
          volumeMounts:
            - name: external-api-server
              mountPath: /api-kubeconfig
          {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        {{- if .Values.kubeconfigSecret }}
        - name: external-api-server
          secret:
            secretName: {{ .Values.kubeconfigSecret }}
        {{- end }}



