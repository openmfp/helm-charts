matches the snapshot:
  1: |
    apiVersion: core.openmfp.io/v1alpha1
    kind: ContentConfiguration
    metadata:
      labels:
        portal.openmfp.org/entity: main
      name: RELEASE-NAME-example-content-ui
      namespace: NAMESPACE
    spec:
      remoteConfiguration:
        contentType: json
        url: http://localhost:8000/ui/example-content/ui/assets/config.json
  2: |
    apiVersion: core.openmfp.io/v1alpha1
    kind: ContentConfiguration
    metadata:
      labels:
        portal.openmfp.org/entity: main
      name: RELEASE-NAME-example-content-wc
      namespace: NAMESPACE
    spec:
      remoteConfiguration:
        contentType: json
        url: http://localhost:8000/ui/example-content/wc/assets/config.json
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: RELEASE-NAME-example-content
      name: RELEASE-NAME-example-content
    spec:
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: RELEASE-NAME-example-content
      strategy:
        rollingUpdate:
          maxSurge: 5
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app: RELEASE-NAME-example-content
        spec:
          containers:
            - env:
                - name: PORT
                  value: "8080"
              image: ghcr.io/openmfp/example-content:1.0.0
              imagePullPolicy: Always
              name: RELEASE-NAME-example-content
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                - containerPort: 8081
                  name: health-port
                  protocol: TCP
              resources:
                limits:
                  cpu: 100m
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /var/cache/nginx
                  name: tmp-volume
                  readOnly: false
                - mountPath: /var/run
                  name: run-volume
                  readOnly: false
          securityContext:
            fsGroup: 2000
            runAsGroup: 3000
            runAsUser: 1000
          serviceAccountName: RELEASE-NAME-example-content
          volumes:
            - emptyDir: {}
              name: tmp-volume
            - emptyDir: {}
              name: run-volume
  4: |
    apiVersion: v1
    imagePullSecrets:
      - name: github
    kind: ServiceAccount
    metadata:
      name: RELEASE-NAME-example-content
      namespace: NAMESPACE
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      name: RELEASE-NAME-example-content
      namespace: NAMESPACE
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
      selector:
        app: RELEASE-NAME-example-content
      type: ClusterIP
matches the snapshot (internalUrl):
  1: |
    apiVersion: core.openmfp.io/v1alpha1
    kind: ContentConfiguration
    metadata:
      labels:
        portal.openmfp.org/entity: main
      name: RELEASE-NAME-example-content-ui
      namespace: NAMESPACE
    spec:
      remoteConfiguration:
        contentType: json
        internalUrl: http://example-content:8000/ui/assets/config.json
        url: http://localhost:8000/ui/example-content/ui/assets/config.json
  2: |
    apiVersion: core.openmfp.io/v1alpha1
    kind: ContentConfiguration
    metadata:
      labels:
        portal.openmfp.org/entity: main
      name: RELEASE-NAME-example-content-wc
      namespace: NAMESPACE
    spec:
      remoteConfiguration:
        contentType: json
        url: http://localhost:8000/ui/example-content/wc/assets/config.json
  3: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: RELEASE-NAME-example-content
      name: RELEASE-NAME-example-content
    spec:
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: RELEASE-NAME-example-content
      strategy:
        rollingUpdate:
          maxSurge: 5
          maxUnavailable: 0
      template:
        metadata:
          labels:
            app: RELEASE-NAME-example-content
        spec:
          containers:
            - env:
                - name: PORT
                  value: "8080"
              image: ghcr.io/openmfp/example-content:1.0.0
              imagePullPolicy: Always
              name: RELEASE-NAME-example-content
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                - containerPort: 8081
                  name: health-port
                  protocol: TCP
              resources:
                limits:
                  cpu: 100m
                  memory: 512Mi
                requests:
                  cpu: 40m
                  memory: 50Mi
              securityContext:
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumeMounts:
                - mountPath: /var/cache/nginx
                  name: tmp-volume
                  readOnly: false
                - mountPath: /var/run
                  name: run-volume
                  readOnly: false
          securityContext:
            fsGroup: 2000
            runAsGroup: 3000
            runAsUser: 1000
          serviceAccountName: RELEASE-NAME-example-content
          volumes:
            - emptyDir: {}
              name: tmp-volume
            - emptyDir: {}
              name: run-volume
  4: |
    apiVersion: v1
    imagePullSecrets:
      - name: github
    kind: ServiceAccount
    metadata:
      name: RELEASE-NAME-example-content
      namespace: NAMESPACE
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      name: RELEASE-NAME-example-content
      namespace: NAMESPACE
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
      selector:
        app: RELEASE-NAME-example-content
      type: ClusterIP
