image:
  name: ghcr.io/openmfp/portal
  pullPolicyOverride: IfNotPresent

http:
  # -- protocol
  protocol: http

# -- import content toggle
importContent: false

validWebcomponentUrls: ".?"
featureToggles: "enableSessionAutoRefresh=true"

virtualService:
  # -- virtual service hosts
  hosts:
    - "*"

# -- environment
environment: local

# -- development landscape toggle
developmentLandcsape: "true"

# -- frontend port
frontendPort: 8000

baseDomains:
  # -- base domains for VirtualService
  - "localhost"

# -- cookie domain
cookieDomain: "localhost"

# -- A way to provide additional experimental environment variables
extraEnvVars:
  - name: OPENMFP_PORTAL_CONTEXT_CRD_GATEWAY_API_URL
    value: https://${org-subdomain}portal.dev.local:8443/api/kubernetes-graphql-gateway/root:orgs:${org-name}/graphql
  - name: OPENMFP_PORTAL_CONTEXT_IAM_SERVICE_API_URL
    value: https://portal.dev.local:8443/iam/query
  - name: OPENMFP_PORTAL_CONTEXT_IAM_ENTITY_CONFIG
    value: >-
      {"account":{"contextProperty":"entityId"}}

trust:
  openmfp:
    # -- base domains
    baseDomains: "localhost"
    # -- discovery endpoint. If specified (different than ""), authDomain and tokenUrl are not required
    discoveryEndpoint: ""
    # -- auth domain (if discoveryEndpoint is not specified)
    authDomain: http://localhost:8000/keycloak/realms/openmfp/protocol/openid-connect/auth
    # -- token url (if discoveryEndpoint is not specified)
    tokenUrl: http://openmfp-keycloak/keycloak/realms/openmfp/protocol/openid-connect/token
    # -- oidc client secret name
    oidcClientSecretName: openmfp-client
    # -- login audience
    loginAudience: openmfp
    # -- secret key reference
    secretKeyRef: attribute.client_secret
    # -- ContentConfiguration validator api url
    contentConfigurationValidatorApiUrl: http://openmfp-extension-manager-operator-server.openmfp-system.svc.cluster.local:8088/validate

health:
  # -- health port to be used by probes
  port: 8080
  readiness:
    # -- path used for the readiness probe
    path: /rest/health
  liveness:
    # -- path used for the liveness probe
    path: /rest/health
  startup:
    # -- path used for the startup probe
    path: /rest/health
