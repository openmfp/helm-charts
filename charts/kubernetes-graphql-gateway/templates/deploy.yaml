apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.entity.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "common.entity.name" . }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.maxSurge }}
      maxUnavailable: {{ .Values.deployment.maxUnavailable }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ include "common.entity.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.entity.name" . }}
        version: "{{ .Chart.AppVersion }}"
    spec:
      serviceAccountName: {{ include "common.entity.name" . }}
      {{- include "common.imagePullSecret" . | nindent 6 }}
      containers:
      - name: {{ include "common.entity.name" . }}-gateway
        image: "{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- include "common.container.securityContext" . | nindent 8 }}
        args: [ "gateway" ]
        ports:
        - name: metrics
          containerPort: {{ .Values.gateway.metricsPort }}
          protocol: TCP
        - name: health-port
          containerPort: {{ .Values.gateway.healthCheck.port }}
          protocol: TCP
        - name: service-port
          containerPort: {{ .Values.gateway.port }}
          protocol: TCP
        env:
        {{ include "kubernetes-graphql-gateway.env" . | nindent 8 }}
        - name: GATEWAY_HANDLER_CFG_GRAPHI_QL
          value: "{{ .Values.gateway.graphiql }}"
        - name: GATEWAY_LOG_LEVEL
          value: "{{ .Values.gateway.logLevel }}"
        - name: GATEWAY_PORT
          value: "{{ .Values.gateway.port }}"
        - name: GATEWAY_USERNAMECLAIM
          value: "{{ .Values.gateway.usernameClaim }}"
        - name: GATEWAY_SHOULDIMPERSONATE
          value: "{{ .Values.gateway.shouldImpersonate }}"
        {{- if (.Values.cors).enabled }}
        - name: GATEWAY_CORS_ENABLED
          value: "{{ .Values.cors.enabled }}"
        - name: GATEWAY_CORS_ALLOWED_HEADERS
          value: "{{ .Values.cors.allowedHeaders }}"
        - name: GATEWAY_CORS_ALLOWED_ORIGINS
          value: "{{ .Values.cors.allowedOrigins }}"
        {{- end }}
        {{- if .Values.gateway.resources }}
        resources:
          {{- toYaml .Values.gateway.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: definitions-volume
            mountPath: /app/definitions
          {{- if .Values.kubeConfig.enabled }}
          - name: kubeconfig-volume
            mountPath: /app/kubeconfig
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      - name: {{ include "common.entity.name" . }}-listener
        image: "{{ .Values.image.name }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- include "common.container.securityContext" . | nindent 8 }}
        args: [ "listener" ]
        ports:
          - name: metrics
            containerPort: {{ .Values.listener.metricsPort }}
            protocol: TCP
          - name: health-port
            containerPort: {{ .Values.listener.healthCheck.port }}
            protocol: TCP
          - name: service-port
            containerPort: {{ .Values.listener.port }}
            protocol: TCP
        env:
        {{- include "kubernetes-graphql-gateway.env" . | nindent 8 }}
        {{- if .Values.listener.resources }}
        resources:
          {{- toYaml .Values.listener.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: definitions-volume
            mountPath: /app/definitions
        {{- if .Values.kubeConfig.enabled }}
          - name: kubeconfig-volume
            mountPath: /app/kubeconfig
        {{- end }}
        {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        - name: definitions-volume
          emptyDir:
            sizeLimit: 500Mi
        {{- if .Values.kubeConfig.enabled }}
        - name: kubeconfig-volume
          secret:
            secretName: {{ .Values.kubeConfig.secretName }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}